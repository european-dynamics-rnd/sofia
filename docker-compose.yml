version: "3.5"
services:

  # Sofia Backend application 
  sofia-backend:
    environment:
      - JAVA_OPTS=-Xms256m -Xmx512m
    build:
      context: backend-container
      args:
        DB_IP: sofiadb
        DB_PORT: 3306
        DB_NAME: sofia
        DB_USERNAME: root
        DB_PASSWORD: root
        REDIS_HOST: sofiaredis
        REDIS_PORT: 6379
        REDIS_PASSWORD: cU7bUfAKHmvvs4yg
      dockerfile: Dockerfile
    image: sofia-backend
    container_name: sofia-backend
    ports:
      - "15502:15502"
    restart: unless-stopped
    depends_on:
      - sofiadb
      - sofiaredis
    networks:
      - sofia_network 

  # Sofia Frontend application 
  sofia-frontend:
    build:
      context: frontend-container
      dockerfile: Dockerfile
      args:
        BACKEND_URL: http://localhost:15502/api
    image: sofia-frontend
    container_name: sofia-frontend
    ports:
      - "5000:80"
    restart: unless-stopped
    networks:
      - sofia_network

  # Sofia Backend Author application
  sofia-backend-author:
    mem_limit: 1024m
    environment:
      - JAVA_OPTS=-Xms256m -Xmx1024m
    build:
      context: backend-author-container
      args:
        DB_IP: sofiadb
        DB_PORT: 3306
        DB_NAME: sofia
        DB_USERNAME: root
        DB_PASSWORD: root
        REDIS_HOST: sofiaredis
        REDIS_PORT: 6379
        REDIS_PASSWORD: cU7bUfAKHmvvs4yg
      dockerfile: Dockerfile
    image: sofia-backend-author
    container_name: sofia-backend-author
    ports:
      - "15503:15502"
    restart: unless-stopped
    depends_on:
      - sofiadb
      - sofiaredis
    networks:
      - sofia_network

  # Sofia Frontend Author application    
  sofia-frontend-author:
    build:
      context: frontend-author-container
      dockerfile: Dockerfile
      args:
        BACKEND_URL: http://localhost:15503/api
    image: sofia-frontend-author
    container_name: sofia-frontend-author
    ports:
      - "5001:80"
    restart: unless-stopped
    networks:
      - sofia_network

  # MariaDb Database of Sofia application 
  sofiadb:
    image: mariadb:10.5
    command: --default-authentication-plugin=mysql_native_password
    container_name: sofiadb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sofia
    volumes:
      - mysql-database:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: unless-stopped
    networks:
      - sofia_network

  # Phpmyadmin web-based application that provides a graphical user interface (GUI) for managing and administering MariaDb Database of Sofia application
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: sofia-db-admin
    restart: unless-stopped
    environment:
      PMA_HOST: sofiadb
      PMA_USER: root
      PMA_PASSWORD: root
      UPLOAD_LIMIT: 300M
    ports:
      - "4801:80"
    networks:
      - sofia_network

  # Redis is an In-memory data storage application used as a Cache for Sofia Application
  sofiaredis:
    image: "redis:alpine"
    hostname: redis
    container_name: sofiaredis
    command: redis-server --requirepass cU7bUfAKHmvvs4yg
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - sofia_network
    restart: unless-stopped

  # Redis Commander is a web-based graphical user interface (GUI) tool for managing and interacting with Redis server    
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:sofiaredis:6379:1:cU7bUfAKHmvvs4yg
    ports:
      - "8082:8081"
    networks:
      - sofia_network
      
  # Dozzle web-based log viewer that monitors logs generated by Docker containers in real-time
  # Access it on your browser on port 8081   
  dozzle:
    image: amir20/dozzle
    container_name: sofia-logs
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8081:8080"
    networks:
      - sofia_network  
      
networks:
  sofia_network:
    name: sofia_network
    driver: bridge

volumes:
  mysql-database: ~